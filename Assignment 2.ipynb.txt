{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7ac4826d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n",
      "10\n"
     ]
    }
   ],
   "source": [
    "for a in range(1,11):\n",
    "    print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "72f9888c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "apple\n",
      "banana\n",
      "cherry\n"
     ]
    }
   ],
   "source": [
    "fruits = [\"apple\",\"banana\",\"cherry\"]\n",
    "\n",
    "for m in fruits :\n",
    "    print(m)\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1bc0aee9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n",
      "650\n"
     ]
    }
   ],
   "source": [
    "even_numbers = [2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50]\n",
    "\n",
    "for a in even_numbers:\n",
    "    a = (sum(even_numbers))\n",
    "    print(a)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "73252bfb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "95\n",
      "95\n",
      "95\n",
      "95\n",
      "95\n",
      "95\n",
      "95\n",
      "95\n",
      "95\n",
      "95\n"
     ]
    }
   ],
   "source": [
    "Integers = [2,6,85,43,95,62,15,7,54,22]\n",
    "\n",
    "for a in Integers:\n",
    "    a=(max(Integers))\n",
    "    print (a)\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "49469e04",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "3\n",
      "5\n",
      "7\n",
      "11\n",
      "13\n",
      "17\n",
      "19\n",
      "23\n",
      "29\n",
      "31\n",
      "37\n",
      "41\n",
      "43\n",
      "47\n",
      "53\n",
      "59\n",
      "61\n",
      "67\n",
      "71\n",
      "73\n",
      "79\n",
      "83\n",
      "89\n",
      "97\n"
     ]
    }
   ],
   "source": [
    "def print_primes(n):\n",
    "    def is_prime(num):\n",
    "        if num < 2:\n",
    "            return False\n",
    "        for i in range(2, int(num**0.5) + 1):\n",
    "            if num % i == 0:\n",
    "                return False\n",
    "        return True\n",
    "\n",
    "    i = 2\n",
    "    while i <= n:\n",
    "        if is_prime(i):\n",
    "            print(i)\n",
    "        i += 1\n",
    "print_primes(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "cb78d452",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "23.0\n"
     ]
    }
   ],
   "source": [
    "people=[\n",
    "    {\"Name\":\"Mayur\",\"Age\":22},\n",
    "    {\"Name\":\"Swapnil\",\"Age\":23},\n",
    "    {\"Name\":\"Ganesh\",\"Age\":21},\n",
    "    {\"Name\":\"Viraj\",\"Age\":26}\n",
    "]\n",
    "\n",
    "total_age =(sum(x[\"Age\"]for x in people))\n",
    "\n",
    "average_age = total_age/len(people)\n",
    "\n",
    "print(average_age)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f6cd6432",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Updated inventory :\n",
      "Uppdated quantity of item1 to 13.\n",
      "item4 is not in the inventory. Unable to update.\n",
      "Uppdated quantity of item2 to 25.\n"
     ]
    }
   ],
   "source": [
    "inventory={\n",
    "    \"item1\":15,\n",
    "    \"item2\":10,\n",
    "    \"item3\":20\n",
    "}\n",
    "\n",
    "def update_inventory(item_name, new_quantity):\n",
    "    if item_name in inventory:\n",
    "        inventory[item_name] = new_quantity\n",
    "        print(f\"Uppdated quantity of {item_name} to {new_quantity}.\")\n",
    "    else :\n",
    "        print(f\"{item_name} is not in the inventory. Unable to update.\")\n",
    "        \n",
    "print(\"Updated inventory :\")\n",
    "\n",
    "update_inventory(\"item1\",13)\n",
    "update_inventory(\"item4\",7)\n",
    "update_inventory(\"item2\",25)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "81cdb3ba",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
